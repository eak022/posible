import { Navigate } from "react-router-dom";
import useAuthStore from "../store/useAuthStore";
import { useEffect, useState } from "react";

const ProtectedRoute = ({ children }) => {
  const { isAuthenticated, isLoading, checkAuth, clearAllTokens } = useAuthStore();
  const [isChecking, setIsChecking] = useState(true);

  useEffect(() => {
    const verifyAuth = async () => {
      try {
        console.log("üîê ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Authentication...");
        console.log("üìä ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô:", { isAuthenticated, isLoading });
        
        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ token ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        const hasLocalToken = localStorage.getItem('x-access-token') || localStorage.getItem('x-refresh-token');
        const hasSessionToken = sessionStorage.getItem('x-access-token') || sessionStorage.getItem('x-refresh-token');
        
        console.log("üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö tokens:", {
          localStorage: !!hasLocalToken,
          sessionStorage: !!hasSessionToken,
          cookies: "HttpOnly (‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å JavaScript)"
        });
        
        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ persisted state ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        const persistedAuth = localStorage.getItem('auth-storage');
        if (persistedAuth) {
          const parsedAuth = JSON.parse(persistedAuth);
          console.log("üì¶ Persisted auth state:", parsedAuth);
          
          // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ persisted state ‡πÅ‡∏•‡∏∞ isAuthenticated ‡πÄ‡∏õ‡πá‡∏ô true ‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å checkAuth
          if (parsedAuth.state?.isAuthenticated) {
            await checkAuth();
          } else {
            // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ persisted state ‡∏´‡∏£‡∏∑‡∏≠ isAuthenticated ‡πÄ‡∏õ‡πá‡∏ô false ‡πÉ‡∏´‡πâ‡∏•‡πâ‡∏≤‡∏á tokens
            clearAllTokens();
          }
        } else {
          // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ persisted state ‡πÄ‡∏•‡∏¢ ‡πÉ‡∏´‡πâ‡∏•‡πâ‡∏≤‡∏á tokens
          clearAllTokens();
        }
        
        console.log("‚úÖ ‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Authentication ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô");
        console.log("üìä ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏´‡∏•‡∏±‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö:", { isAuthenticated, isLoading });
      } catch (error) {
        console.log("‚ùå Auth check failed:", error);
        // ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏Å‡∏¥‡∏î error ‡πÉ‡∏´‡πâ‡∏•‡πâ‡∏≤‡∏á tokens ‡πÅ‡∏•‡∏∞‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ isAuthenticated ‡πÄ‡∏õ‡πá‡∏ô false
        clearAllTokens();
      } finally {
        setIsChecking(false);
      }
    };

    // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å verifyAuth ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏°‡∏∑‡πà‡∏≠ component mount ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å
    if (isChecking) {
      verifyAuth();
    }
  }, []); // ‡∏•‡∏ö dependencies ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô infinite loop

  // ‡∏ñ‡πâ‡∏≤‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î ‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö auth ‡πÉ‡∏´‡πâ‡πÅ‡∏™‡∏î‡∏á loading
  if (isLoading || isChecking) {
    console.log("‚è≥ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î...", { isLoading, isChecking });
    return (
      <div className="min-h-screen flex items-center justify-center">
        <div className="animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-indigo-500"></div>
      </div>
    );
  }

  // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ login ‡πÉ‡∏´‡πâ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ login
  if (!isAuthenticated) {
    console.log("üö´ ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô - ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ô‡∏≥‡∏ó‡∏≤‡∏á‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ /login");
    console.log("üìä ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô:", { isAuthenticated, isLoading, isChecking });
    
    // ‡∏•‡πâ‡∏≤‡∏á tokens ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Å‡πà‡∏≠‡∏ô‡∏ô‡∏≥‡∏ó‡∏≤‡∏á
    clearAllTokens();
    
    return <Navigate to="/login" replace />;
  }

  // ‡∏ñ‡πâ‡∏≤ login ‡πÅ‡∏•‡πâ‡∏ß ‡πÉ‡∏´‡πâ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
  console.log("‚úÖ ‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡πÅ‡∏•‡πâ‡∏ß - ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤");
  return children;
};

export default ProtectedRoute;
